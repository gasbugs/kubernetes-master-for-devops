apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-226hm
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502948"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-226hm
    uid: 33cd3d2b-0b9f-4897-8185-100fb8894ea6
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://4c6e0796b9bb6cb0ca41bacc226333fe84d98064e22bdf713309183bfeda3d7a
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:00:14Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.27
    podIPs:
    - ip: 10.32.0.27
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-25ld4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "503058"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-25ld4
    uid: 0e2a7626-c143-4aaa-98bc-9a2ce52307ae
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://04f042998cafaaf993fb25528f7cd656c5d9eeeab4122532c35299f578aa89c3
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:00:38Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.23
    podIPs:
    - ip: 10.32.0.23
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-275mr
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502862"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-275mr
    uid: 8b448841-950b-4e0b-8325-df6ce0a8336c
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://4c229fcf5c3b25275abad2628da66aee7ba71682de5ac36aef7273ca9b157151
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T18:59:55Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.19
    podIPs:
    - ip: 10.32.0.19
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-2k2s7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "503010"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-2k2s7
    uid: 5f3ab3bb-10d5-4ca4-90eb-1f459f4fa2c1
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3d771311fa53c80471909ab3ae5d87b6fb2f8cc6b50e025cfc249c471ec99483
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:00:27Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.33
    podIPs:
    - ip: 10.32.0.33
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-442s4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502996"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-442s4
    uid: a09a45f6-4d82-4a77-8ac8-a30bc8df2323
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://998f81b1d718a22eeef107404821c01e3caa3feb9e953c6b33bfc133454a1399
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:00:25Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.32
    podIPs:
    - ip: 10.32.0.32
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-496vb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502873"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-496vb
    uid: 95ee7f39-6d67-40d5-81d1-3b3821a2f12b
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8c0342ed15b99abd7919aca0291afed3371bf90ee60d580a364c37a2e283f970
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T18:59:58Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.20
    podIPs:
    - ip: 10.32.0.20
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-58w6l
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502986"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-58w6l
    uid: 218573c7-2467-4cef-88ae-b3c1e8cac466
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f0b283e616e16c0f307021c1982ada9609558abbb833f88a9ebaae7582c4477d
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:00:22Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.30
    podIPs:
    - ip: 10.32.0.30
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-5h85j
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502836"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-5h85j
    uid: 6f74f5b9-efec-43ff-aeb6-d295f2cd9358
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a0eb127b07b5c1225300b462f5dea031de7825778f1f1563950126d030d021a2
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T18:59:50Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.17
    podIPs:
    - ip: 10.32.0.17
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-5t4d4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "503034"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-5t4d4
    uid: 64ad8570-4b8e-489e-b74f-241f79b372f1
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8ac568f8fa47036a28159f4baa31cf9b2ef517f136ce51a168df82b91aeb6658
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:00:32Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.34
    podIPs:
    - ip: 10.32.0.34
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:56:04Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-66vvv
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502084"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-66vvv
    uid: 597a0346-4d97-41dc-9bc0-f644e5362233
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a70c3789b5c3ba2579a218744cf69f9ee63d5dac9ba51f9dcd98c83908a9fd58
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T18:56:15Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.10
    podIPs:
    - ip: 10.32.0.10
    qosClass: BestEffort
    startTime: "2020-03-21T18:56:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-689vd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502896"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-689vd
    uid: 3fc820b0-f6fd-47c3-a1d2-5f69aa0601ad
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://00a265c4d7e0640ae7f5a3e7420b2b1cd86a12a20e35cb1a604e254d81434e4b
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:00:03Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.22
    podIPs:
    - ip: 10.32.0.22
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-88vnh
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502828"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-88vnh
    uid: 6971db05-62c2-4a68-b17a-9c34103b9670
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://166ae2f99e4e58bc526708ea5fbf5313179e12f3230f5114e12dd32711c50c6c
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T18:59:48Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.16
    podIPs:
    - ip: 10.32.0.16
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-8bkg2
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502971"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-8bkg2
    uid: 1d5a0686-f33c-4fdb-8016-1510209c3c06
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://39f717d347516cc03bf709ed68001870955960f231ff8758aa77bdf4ba3c3d91
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:00:19Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.29
    podIPs:
    - ip: 10.32.0.29
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-969cx
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502960"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-969cx
    uid: 77458793-5667-496c-887f-ca0a861cc3f9
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://35dab4128d3109fbf9ed57ab349a9b52ad2beecd4d449470c4e8665efa409c70
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:00:17Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.28
    podIPs:
    - ip: 10.32.0.28
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-9svtq
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502923"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-9svtq
    uid: 9d3a24e7-80b2-4c1a-adc6-3eaf797e8611
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://19eb652038892b0e48b5386dfbf679591210c17dbc0a1f6ed15aa5835601effd
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:00:09Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.25
    podIPs:
    - ip: 10.32.0.25
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:56:04Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-bb7rx
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502048"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-bb7rx
    uid: 474ff120-10c0-4542-9419-ddfab5971686
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://05522ecab13519e6746b85ab840f206ada6053ad6abd2f9e2e13004e931fe30f
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T18:56:10Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.8
    podIPs:
    - ip: 10.32.0.8
    qosClass: BestEffort
    startTime: "2020-03-21T18:56:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:55:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-cqpxw
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "501907"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-cqpxw
    uid: ef7e6f3c-ca3b-411a-bf09-2385b4d1cfbc
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:55:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:55:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:55:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:55:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://5c1e4e0e5ba14dc5f0c48ffd4c7d66a2e426f456b370ad78f6b8d53948a1c986
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T18:55:47Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.2
    podIPs:
    - ip: 10.32.0.2
    qosClass: BestEffort
    startTime: "2020-03-21T18:55:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-cxb27
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502885"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-cxb27
    uid: 1aaba501-5946-40ed-ba86-5ffb51287319
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://63ddca095382ef82a105fd96c47e22fa38c1350bd69b2c650e92b321150eaaca
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:00:01Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.21
    podIPs:
    - ip: 10.32.0.21
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:57:10Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-gxck4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502289"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-gxck4
    uid: cc2f0879-8137-4066-aaf0-29ff6add68a0
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://cf69770ac5894cc6ff1cb9c5c89f7b078a1ba84f637b42d2be460920c92b26e8
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T18:57:13Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.12
    podIPs:
    - ip: 10.32.0.12
    qosClass: BestEffort
    startTime: "2020-03-21T18:57:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:57:10Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-hfxqt
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502353"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-hfxqt
    uid: a387876e-6d47-4f99-85a6-9fec3c20b381
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e9daf4f912a7dc3d0e1e4023ebd8096e8db2cb8ef569d3adfd6fa7996de64c0b
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T18:57:24Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.15
    podIPs:
    - ip: 10.32.0.15
    qosClass: BestEffort
    startTime: "2020-03-21T18:57:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:56:04Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-hzkng
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502062"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-hzkng
    uid: de74f3a3-86c4-4efd-834f-de4caf123ce4
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f115d2a167f53dcd2c2fef47f47246a34bd31e3c0d5c1a35774a6a113be1ed7e
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T18:56:13Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.9
    podIPs:
    - ip: 10.32.0.9
    qosClass: BestEffort
    startTime: "2020-03-21T18:56:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-l29f6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502933"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-l29f6
    uid: 982394c7-1f1e-4cbf-a848-7f179f19c69d
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8daa22c27e1614b7a29d777cfbee0da28df3f5f111b983e232ba838c113a4791
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:00:11Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.26
    podIPs:
    - ip: 10.32.0.26
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-l2jpq
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "503021"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-l2jpq
    uid: 8f50cf6d-130a-42bf-81c4-59329fd2fb80
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://14b57dd913314dbc733acdc6828a43e489b68ad05cb62a2e063e5b4b4f061392
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:00:30Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.31
    podIPs:
    - ip: 10.32.0.31
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-l4v2c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502847"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-l4v2c
    uid: bf79d2c5-3142-4ca1-adfa-0529ff6733fc
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://46a5cc4f30cf750ea036348856f5c73c2d5df61d2cf538f7f2dbdd118cfffc05
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T18:59:53Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.18
    podIPs:
    - ip: 10.32.0.18
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:57:10Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-n6vn6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502310"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-n6vn6
    uid: 5db1e079-8654-48b3-9fc2-a72476f7904f
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://036a2235b6a8f2211a4aa080f3dc18c51ae9777f5f043a308ad68bf9716d2214
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T18:57:16Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.11
    podIPs:
    - ip: 10.32.0.11
    qosClass: BestEffort
    startTime: "2020-03-21T18:57:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:57:10Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-pchbk
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502330"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-pchbk
    uid: 1c1c6ddc-92e2-4b8e-b4fb-9f15b6b97e5f
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e45011afcc5843194207ee37eeb95e48e0bf297ed732d545a53c2028aab75c42
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T18:57:19Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.13
    podIPs:
    - ip: 10.32.0.13
    qosClass: BestEffort
    startTime: "2020-03-21T18:57:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:56:04Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-rzzqj
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502026"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-rzzqj
    uid: 7e674e82-dcd8-4fd8-bf26-201f7fb7d2b9
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:56:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://6c956c5e3e3a860bc45bf6e9065e5e0bc89b69b5bd84fcdb101ad930c8bf2254
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T18:56:08Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.4
    podIPs:
    - ip: 10.32.0.4
    qosClass: BestEffort
    startTime: "2020-03-21T18:56:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-vfzdg
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "503044"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-vfzdg
    uid: 649e8579-5be9-4248-8892-fc9f2c627102
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://16de343068dbe696376bdd535cbeb38d24114e938bacacb27809b7f05d7934ce
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:00:35Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.35
    podIPs:
    - ip: 10.32.0.35
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:57:10Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-vw2sn
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502343"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-vw2sn
    uid: ad7ed8d3-f0f4-467c-a6b6-f7da5a22c877
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:57:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://bb122aa1347282f055c41af2819b7aa9cf9ae4676a8464d66c2399deb7fa47f9
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T18:57:21Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.14
    podIPs:
    - ip: 10.32.0.14
    qosClass: BestEffort
    startTime: "2020-03-21T18:57:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T18:59:43Z"
    generateName: http-go-69b884b5b5-
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5-xbs79
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: http-go-69b884b5b5
      uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
    resourceVersion: "502911"
    selfLink: /api/v1/namespaces/default/pods/http-go-69b884b5b5-xbs79
    uid: d6c2d37e-fbe2-439f-a595-817a7fd340bb
  spec:
    containers:
    - image: gasbugs/http-go
      imagePullPolicy: Always
      name: http-go
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-rj8wz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-rj8wz
      secret:
        defaultMode: 420
        secretName: default-token-rj8wz
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:00:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T18:59:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://624a0160094b466f929ceaf61bb3f0363380b7d6a45189638e3495ae5ed65084
      image: gasbugs/http-go:latest
      imageID: docker-pullable://gasbugs/http-go@sha256:5cf243f818caf7a750761cfe2ff822a284d6eb459356318d3f0bd4b1efe141d9
      lastState: {}
      name: http-go
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:00:06Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.24
    podIPs:
    - ip: 10.32.0.24
    qosClass: BestEffort
    startTime: "2020-03-21T18:59:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-10T15:53:07Z"
    generateName: coredns-6955765f44-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 6955765f44
    name: coredns-6955765f44-cfn8r
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-6955765f44
      uid: c71139e1-0823-4a22-8a28-5efc098e7940
    resourceVersion: "497868"
    selfLink: /api/v1/namespaces/kube-system/pods/coredns-6955765f44-cfn8r
    uid: 63a74b67-90fc-452a-b22d-531ca6405330
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: k8s.gcr.io/coredns:1.6.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: coredns-token-6mwlp
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: work2
    nodeSelector:
      beta.kubernetes.io/os: linux
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: coredns-token-6mwlp
      secret:
        defaultMode: 420
        secretName: coredns-token-6mwlp
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-10T15:53:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:33:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:33:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-10T15:53:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://7ef2b50d0f2ca95b8c7a8955cbe6e34e322ec3b3ba24ac7c498cbf00da12d2f7
      image: k8s.gcr.io/coredns:1.6.5
      imageID: docker-pullable://k8s.gcr.io/coredns@sha256:7ec975f167d815311a7136c32e70735f0d00b73781365df1befd46ed35bd4fe7
      lastState:
        terminated:
          containerID: docker://eea0a8fc5cb3087157e358dc439f5a5cac014ecfd635c6964b169b7644665bbd
          exitCode: 2
          finishedAt: "2020-03-18T15:30:12Z"
          reason: Error
          startedAt: "2020-03-10T16:10:55Z"
      name: coredns
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:33:28Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.3
    podIPs:
    - ip: 10.32.0.3
    qosClass: Burstable
    startTime: "2020-03-10T15:53:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-21T19:27:38Z"
    generateName: coredns-6955765f44-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 6955765f44
    name: coredns-6955765f44-vslt8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-6955765f44
      uid: c71139e1-0823-4a22-8a28-5efc098e7940
    resourceVersion: "506985"
    selfLink: /api/v1/namespaces/kube-system/pods/coredns-6955765f44-vslt8
    uid: 0f005441-bd53-4a0b-830a-526a9dca38fc
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: k8s.gcr.io/coredns:1.6.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: coredns-token-6mwlp
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: work1
    nodeSelector:
      beta.kubernetes.io/os: linux
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: coredns-token-6mwlp
      secret:
        defaultMode: 420
        secretName: coredns-token-6mwlp
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:27:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:27:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:27:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:27:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://728774b6326b343c6e11c51444abd69632445b8f78255483e890605bc00316de
      image: k8s.gcr.io/coredns:1.6.5
      imageID: docker-pullable://k8s.gcr.io/coredns@sha256:7ec975f167d815311a7136c32e70735f0d00b73781365df1befd46ed35bd4fe7
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-21T19:27:48Z"
    hostIP: 10.0.2.4
    phase: Running
    podIP: 10.40.0.1
    podIPs:
    - ip: 10.40.0.1
    qosClass: Burstable
    startTime: "2020-03-21T19:27:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: ae5d8b8743f7d6399fcdd2fc8bf7dad5
      kubernetes.io/config.mirror: ae5d8b8743f7d6399fcdd2fc8bf7dad5
      kubernetes.io/config.seen: "2020-03-03T17:33:42.246058177+09:00"
      kubernetes.io/config.source: file
    creationTimestamp: "2020-03-03T08:33:45Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-master
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: master
      uid: 0c1fa284-da38-4994-855a-3bb4381ca7b9
    resourceVersion: "434718"
    selfLink: /api/v1/namespaces/kube-system/pods/etcd-master
    uid: 98b3feb4-eabf-4c34-b5ef-a9efb49d5e58
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://10.0.2.15:2379
      - --cert-file=/etc/kubernetes/pki/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/etcd
      - --initial-advertise-peer-urls=https://10.0.2.15:2380
      - --initial-cluster=master=https://10.0.2.15:2380
      - --key-file=/etc/kubernetes/pki/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://10.0.2.15:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://10.0.2.15:2380
      - --name=master
      - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key
      - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      - --snapshot-count=10000
      - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      image: k8s.gcr.io/etcd:3.4.3-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/etcd
        name: etcd-data
      - mountPath: /etc/kubernetes/pki/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: master
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/pki/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:32:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:32:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:32:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:32:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://7b2176312ac021149539b96919500c31addcc98fd5a5eef65684fc43afc456a1
      image: k8s.gcr.io/etcd:3.4.3-0
      imageID: docker-pullable://k8s.gcr.io/etcd@sha256:4afb99b4690b418ffc2ceb67e1a17376457e441c1f09ab55447f0aaf992fa646
      lastState:
        terminated:
          containerID: docker://275485d8a58831d83b2bdfbdc3a73575e1a81816d2125badca1741da7e57b546
          exitCode: 0
          finishedAt: "2020-03-18T15:30:05Z"
          reason: Completed
          startedAt: "2020-03-05T03:49:35Z"
      name: etcd
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:32:21Z"
    hostIP: 10.0.2.15
    phase: Running
    podIP: 10.0.2.15
    podIPs:
    - ip: 10.0.2.15
    qosClass: BestEffort
    startTime: "2020-03-18T15:32:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: a82aa008a743eaeebe711bad4e948f7c
      kubernetes.io/config.mirror: a82aa008a743eaeebe711bad4e948f7c
      kubernetes.io/config.seen: "2020-03-19T00:44:55.436568324+09:00"
      kubernetes.io/config.source: file
    creationTimestamp: "2020-03-18T15:44:58Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-master
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: master
      uid: 0c1fa284-da38-4994-855a-3bb4381ca7b9
    resourceVersion: "436755"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-apiserver-master
    uid: 884b04a0-67f7-434c-9e60-903f49a9f9c5
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=10.0.2.15
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --enable-admission-plugins=NodeRestriction,LimitRanger
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
      - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
      - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --insecure-port=0
      - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
      - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
      - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=6443
      - --service-account-key-file=/etc/kubernetes/pki/sa.pub
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
      - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
      image: k8s.gcr.io/kube-apiserver:v1.17.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 10.0.2.15
          path: /healthz
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      resources:
        requests:
          cpu: 250m
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /etc/pki
        name: etc-pki
        readOnly: true
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: master
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/pki
        type: DirectoryOrCreate
      name: etc-pki
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:44:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:44:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:44:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:44:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://09eb8e85dc12c6d9e991f24f212e5720a247e9f000842b6edf0d954468d30126
      image: k8s.gcr.io/kube-apiserver:v1.17.3
      imageID: docker-pullable://k8s.gcr.io/kube-apiserver@sha256:33400ea29255bd20714b6b8092b22ebb045ae134030d6bf476bddfed9d33e900
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:44:56Z"
    hostIP: 10.0.2.15
    phase: Running
    podIP: 10.0.2.15
    podIPs:
    - ip: 10.0.2.15
    qosClass: Burstable
    startTime: "2020-03-18T15:44:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 27d0c51886b29063a1ed2ae1755a84f9
      kubernetes.io/config.mirror: 27d0c51886b29063a1ed2ae1755a84f9
      kubernetes.io/config.seen: "2020-03-03T17:33:42.246062802+09:00"
      kubernetes.io/config.source: file
    creationTimestamp: "2020-03-03T08:33:45Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-master
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: master
      uid: 0c1fa284-da38-4994-855a-3bb4381ca7b9
    resourceVersion: "436781"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-controller-manager-master
    uid: 49dbc744-482d-4edb-b9a4-4e4cd906aad0
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt
      - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=true
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --root-ca-file=/etc/kubernetes/pki/ca.crt
      - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
      - --use-service-account-credentials=true
      image: k8s.gcr.io/kube-controller-manager:v1.17.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /etc/pki
        name: etc-pki
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: master
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/pki
        type: DirectoryOrCreate
      name: etc-pki
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:32:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:45:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:45:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:32:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://7c63d28992465358bfe2c603ea8e806ae24e3edcc54cff846e67ed1a060eba60
      image: k8s.gcr.io/kube-controller-manager:v1.17.3
      imageID: docker-pullable://k8s.gcr.io/kube-controller-manager@sha256:2f0bf4d08e72a1fd6327c8eca3a72ad21af3a608283423bb3c10c98e68759844
      lastState:
        terminated:
          containerID: docker://911aee689a72e3c297b2660bef01041ad3890b16ceeac51b22d20de9669a2055
          exitCode: 255
          finishedAt: "2020-03-18T15:44:58Z"
          reason: Error
          startedAt: "2020-03-18T15:43:12Z"
      name: kube-controller-manager
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:45:18Z"
    hostIP: 10.0.2.15
    phase: Running
    podIP: 10.0.2.15
    podIPs:
    - ip: 10.0.2.15
    qosClass: Burstable
    startTime: "2020-03-18T15:32:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-03T08:39:47Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 5fc47fcbf5
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-9whjc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: da25070e-3595-4246-a165-399d398cb853
    resourceVersion: "497675"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-proxy-9whjc
    uid: 4b758fae-49f9-441b-919a-1cf952d2589e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - work1
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/kube-proxy:v1.17.3
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-proxy-token-sk9st
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: work1
    nodeSelector:
      beta.kubernetes.io/os: linux
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-proxy-token-sk9st
      secret:
        defaultMode: 420
        secretName: kube-proxy-token-sk9st
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-03T08:39:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:32:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:32:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-03T08:39:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://26811f8a00beea58753bc81bd14f6e1ea5f4e73f9dbe934d6b9225d26d354619
      image: k8s.gcr.io/kube-proxy:v1.17.3
      imageID: docker-pullable://k8s.gcr.io/kube-proxy@sha256:3a70e2ab8d1d623680191a1a1f1dcb0bdbfd388784b1f153d5630a7397a63fd4
      lastState:
        terminated:
          containerID: docker://4eaa617ce825d397781fd88f9eee30d9d0cbb2299d812311a1f08e044eb6af91
          exitCode: 255
          finishedAt: "2020-03-18T15:32:12Z"
          reason: Error
          startedAt: "2020-03-10T16:09:53Z"
      name: kube-proxy
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:32:28Z"
    hostIP: 10.0.2.4
    phase: Running
    podIP: 10.0.2.4
    podIPs:
    - ip: 10.0.2.4
    qosClass: BestEffort
    startTime: "2020-03-03T08:39:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-03T08:33:48Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 5fc47fcbf5
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-d8cnw
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: da25070e-3595-4246-a165-399d398cb853
    resourceVersion: "434794"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-proxy-d8cnw
    uid: 4fe5f7ee-4757-4cb3-80e5-583620bafe96
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - master
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/kube-proxy:v1.17.3
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-proxy-token-sk9st
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: master
    nodeSelector:
      beta.kubernetes.io/os: linux
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-proxy-token-sk9st
      secret:
        defaultMode: 420
        secretName: kube-proxy-token-sk9st
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-03T08:33:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:32:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:32:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-03T08:33:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ae6e247f667563b176cac3abc76fecdabe931fd96d24620ac9d11c0ea74bfe3f
      image: k8s.gcr.io/kube-proxy:v1.17.3
      imageID: docker-pullable://k8s.gcr.io/kube-proxy@sha256:3a70e2ab8d1d623680191a1a1f1dcb0bdbfd388784b1f153d5630a7397a63fd4
      lastState:
        terminated:
          containerID: docker://4e257665121a137110189159ba7d79eb4bcde1060e2e0b831ffe3fc22c865bf1
          exitCode: 2
          finishedAt: "2020-03-18T15:30:05Z"
          reason: Error
          startedAt: "2020-03-05T03:49:42Z"
      name: kube-proxy
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:32:27Z"
    hostIP: 10.0.2.15
    phase: Running
    podIP: 10.0.2.15
    podIPs:
    - ip: 10.0.2.15
    qosClass: BestEffort
    startTime: "2020-03-03T08:33:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-03T08:34:19Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 5fc47fcbf5
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-lnvvm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: da25070e-3595-4246-a165-399d398cb853
    resourceVersion: "497864"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-proxy-lnvvm
    uid: 110fae63-6176-4436-aa17-2ccaeb1be331
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - work2
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/kube-proxy:v1.17.3
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-proxy-token-sk9st
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: work2
    nodeSelector:
      beta.kubernetes.io/os: linux
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-proxy-token-sk9st
      secret:
        defaultMode: 420
        secretName: kube-proxy-token-sk9st
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-03T08:34:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:32:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:32:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-03T08:34:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://608230f85849a64ea424652bbf722e9c16f768ce6bdbcc4eee264adf787848ba
      image: k8s.gcr.io/kube-proxy:v1.17.3
      imageID: docker-pullable://k8s.gcr.io/kube-proxy@sha256:3a70e2ab8d1d623680191a1a1f1dcb0bdbfd388784b1f153d5630a7397a63fd4
      lastState:
        terminated:
          containerID: docker://13b1cacab3c8f7bc59059d4706d83eed92e32ae9e1b1fb54332275bf9d26d671
          exitCode: 2
          finishedAt: "2020-03-18T15:30:12Z"
          reason: Error
          startedAt: "2020-03-10T16:10:06Z"
      name: kube-proxy
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:32:28Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.0.2.5
    podIPs:
    - ip: 10.0.2.5
    qosClass: BestEffort
    startTime: "2020-03-03T08:34:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: e3025acd90e7465e66fa19c71b916366
      kubernetes.io/config.mirror: e3025acd90e7465e66fa19c71b916366
      kubernetes.io/config.seen: "2020-03-03T17:33:42.246063589+09:00"
      kubernetes.io/config.source: file
    creationTimestamp: "2020-03-03T08:33:45Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-master
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: master
      uid: 0c1fa284-da38-4994-855a-3bb4381ca7b9
    resourceVersion: "436777"
    selfLink: /api/v1/namespaces/kube-system/pods/kube-scheduler-master
    uid: 13a28ac5-b689-432c-ba85-6aaa77a30a9e
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=true
      image: k8s.gcr.io/kube-scheduler:v1.17.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: master
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:32:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:45:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:45:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:32:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e4d2f16a9dc489f529fd027062080c1830f7abcb94bdf3488104be61f548600b
      image: k8s.gcr.io/kube-scheduler:v1.17.3
      imageID: docker-pullable://k8s.gcr.io/kube-scheduler@sha256:b091f0db3bc61a3339fd3ba7ebb06c984c4ded32e1f2b1ef0fbdfab638e88462
      lastState:
        terminated:
          containerID: docker://729e4f9fc148be07010e33f7a06136475ba0c1194716199dc26f98d0c2128ce7
          exitCode: 255
          finishedAt: "2020-03-18T15:44:56Z"
          reason: Error
          startedAt: "2020-03-18T15:43:13Z"
      name: kube-scheduler
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:45:17Z"
    hostIP: 10.0.2.15
    phase: Running
    podIP: 10.0.2.15
    podIPs:
    - ip: 10.0.2.15
    qosClass: Burstable
    startTime: "2020-03-18T15:32:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-19T15:27:07Z"
    generateName: metrics-server-6ffdb54684-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 6ffdb54684
    name: metrics-server-6ffdb54684-h68mw
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-6ffdb54684
      uid: 787f9db0-90d0-4820-a3be-edd6e35e72a5
    resourceVersion: "497880"
    selfLink: /api/v1/namespaces/kube-system/pods/metrics-server-6ffdb54684-h68mw
    uid: 4c0f8e0a-6f9b-41c0-8ce0-1046b176d67e
  spec:
    containers:
    - args:
      - --cert-dir=/tmp
      - --secure-port=4443
      - --kubelet-insecure-tls
      - --kubelet-preferred-address-types=InternalIP
      image: k8s.gcr.io/metrics-server-amd64:v0.3.6
      imagePullPolicy: IfNotPresent
      name: metrics-server
      ports:
      - containerPort: 4443
        name: main-port
        protocol: TCP
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: metrics-server-token-rkjf7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    nodeSelector:
      kubernetes.io/arch: amd64
      kubernetes.io/os: linux
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: metrics-server-token-rkjf7
      secret:
        defaultMode: 420
        secretName: metrics-server-token-rkjf7
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T15:27:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T15:27:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T15:27:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T15:27:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e2f4cbc15326a0a59eb6b3c797b9046b92b221266bbe0b69760bce24d7cfd611
      image: k8s.gcr.io/metrics-server-amd64:v0.3.6
      imageID: docker-pullable://k8s.gcr.io/metrics-server-amd64@sha256:c9c4e95068b51d6b33a9dccc61875df07dc650abbf4ac1a19d58b4628f89288b
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-19T15:27:09Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.6
    podIPs:
    - ip: 10.32.0.6
    qosClass: BestEffort
    startTime: "2020-03-19T15:27:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-05T04:22:27Z"
    generateName: weave-net-
    labels:
      controller-revision-hash: 7f54576664
      name: weave-net
      pod-template-generation: "1"
    name: weave-net-7c9fc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: weave-net
      uid: ba6e6387-f66b-46f4-a0eb-38a7cd6c6e6d
    resourceVersion: "507441"
    selfLink: /api/v1/namespaces/kube-system/pods/weave-net-7c9fc
    uid: c7dd9116-cf33-4062-af4f-f9c954feda46
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - master
    containers:
    - command:
      - /home/weave/launch.sh
      env:
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: docker.io/weaveworks/weave-kube:2.6.0
      imagePullPolicy: IfNotPresent
      name: weave
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /status
          port: 6784
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /weavedb
        name: weavedb
      - mountPath: /host/opt
        name: cni-bin
      - mountPath: /host/home
        name: cni-bin2
      - mountPath: /host/etc
        name: cni-conf
      - mountPath: /host/var/lib/dbus
        name: dbus
      - mountPath: /lib/modules
        name: lib-modules
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: weave-net-token-vmzdx
        readOnly: true
    - env:
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: docker.io/weaveworks/weave-npc:2.6.0
      imagePullPolicy: IfNotPresent
      name: weave-npc
      resources:
        requests:
          cpu: 10m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: weave-net-token-vmzdx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: master
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seLinuxOptions: {}
    serviceAccount: weave-net
    serviceAccountName: weave-net
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/weave
        type: ""
      name: weavedb
    - hostPath:
        path: /opt
        type: ""
      name: cni-bin
    - hostPath:
        path: /home
        type: ""
      name: cni-bin2
    - hostPath:
        path: /etc
        type: ""
      name: cni-conf
    - hostPath:
        path: /var/lib/dbus
        type: ""
      name: dbus
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: weave-net-token-vmzdx
      secret:
        defaultMode: 420
        secretName: weave-net-token-vmzdx
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-05T04:22:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:30:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-21T19:30:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-05T04:22:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://70d3aeca27958051423d5c328619d5f09707a3f9c3c12183ff75666551570b6a
      image: weaveworks/weave-kube:2.6.0
      imageID: docker-pullable://weaveworks/weave-kube@sha256:e4a3a5b9bf605a7ff5ad5473c7493d7e30cbd1ed14c9c2630a4e409b4dbfab1c
      lastState:
        terminated:
          containerID: docker://30dd9c8556894c91fa5e45c1fcc5323885f4509b53f6735f01d1ce838ff7d5c8
          exitCode: 4
          finishedAt: "2020-03-18T15:32:28Z"
          reason: Error
          startedAt: "2020-03-18T15:32:28Z"
      name: weave
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:32:46Z"
    - containerID: docker://a2d18160c4547d363951a71092ca97c3643066b9a8ecebf3e7e0927387a8d39d
      image: weaveworks/weave-npc:2.6.0
      imageID: docker-pullable://weaveworks/weave-npc@sha256:985de9ff201677a85ce78703c515466fe45c9c73da6ee21821e89d902c21daf8
      lastState:
        terminated:
          containerID: docker://7baaf8a1610f0c78ab6bfeb1f2beacbfe5fbb651225739d4a3e2744fb63cb73d
          exitCode: 1
          finishedAt: "2020-03-18T15:30:04Z"
          reason: Error
          startedAt: "2020-03-05T04:22:29Z"
      name: weave-npc
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:32:28Z"
    hostIP: 10.0.2.15
    phase: Running
    podIP: 10.0.2.15
    podIPs:
    - ip: 10.0.2.15
    qosClass: Burstable
    startTime: "2020-03-05T04:22:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-05T04:22:27Z"
    generateName: weave-net-
    labels:
      controller-revision-hash: 7f54576664
      name: weave-net
      pod-template-generation: "1"
    name: weave-net-7qtwm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: weave-net
      uid: ba6e6387-f66b-46f4-a0eb-38a7cd6c6e6d
    resourceVersion: "497865"
    selfLink: /api/v1/namespaces/kube-system/pods/weave-net-7qtwm
    uid: a8fd0cd3-0dae-4289-ba84-0e9ffb0a9427
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - work2
    containers:
    - command:
      - /home/weave/launch.sh
      env:
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: docker.io/weaveworks/weave-kube:2.6.0
      imagePullPolicy: IfNotPresent
      name: weave
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /status
          port: 6784
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /weavedb
        name: weavedb
      - mountPath: /host/opt
        name: cni-bin
      - mountPath: /host/home
        name: cni-bin2
      - mountPath: /host/etc
        name: cni-conf
      - mountPath: /host/var/lib/dbus
        name: dbus
      - mountPath: /lib/modules
        name: lib-modules
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: weave-net-token-vmzdx
        readOnly: true
    - env:
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: docker.io/weaveworks/weave-npc:2.6.0
      imagePullPolicy: IfNotPresent
      name: weave-npc
      resources:
        requests:
          cpu: 10m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: weave-net-token-vmzdx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: work2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seLinuxOptions: {}
    serviceAccount: weave-net
    serviceAccountName: weave-net
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/weave
        type: ""
      name: weavedb
    - hostPath:
        path: /opt
        type: ""
      name: cni-bin
    - hostPath:
        path: /home
        type: ""
      name: cni-bin2
    - hostPath:
        path: /etc
        type: ""
      name: cni-conf
    - hostPath:
        path: /var/lib/dbus
        type: ""
      name: dbus
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: weave-net-token-vmzdx
      secret:
        defaultMode: 420
        secretName: weave-net-token-vmzdx
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-05T04:22:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T16:05:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T16:05:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-05T04:22:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://2741290f650bb89d81bc8d4f379cf65a074fe7bfd8bf485292f8ca5d38c5bb60
      image: weaveworks/weave-kube:2.6.0
      imageID: docker-pullable://weaveworks/weave-kube@sha256:e4a3a5b9bf605a7ff5ad5473c7493d7e30cbd1ed14c9c2630a4e409b4dbfab1c
      lastState:
        terminated:
          containerID: docker://cb360e56ecb5ab4231583282acc96aa96ad875de26c2cb5b7314ff220204b92c
          exitCode: 1
          finishedAt: "2020-03-18T15:32:58Z"
          reason: Error
          startedAt: "2020-03-18T15:32:28Z"
      name: weave
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:33:11Z"
    - containerID: docker://9fef80663be25ed79621ddaa88ddec1d6f40fb0a170611c0d88c7dc6214e7cd5
      image: weaveworks/weave-npc:2.6.0
      imageID: docker-pullable://weaveworks/weave-npc@sha256:985de9ff201677a85ce78703c515466fe45c9c73da6ee21821e89d902c21daf8
      lastState:
        terminated:
          containerID: docker://700df4ae6a468f37bd222c799c1a16a34943b64f26cfbb0cf1bfcd3e8ac55ea3
          exitCode: 1
          finishedAt: "2020-03-19T16:05:18Z"
          reason: Error
          startedAt: "2020-03-18T15:32:28Z"
      name: weave-npc
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2020-03-19T16:05:19Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.0.2.5
    podIPs:
    - ip: 10.0.2.5
    qosClass: Burstable
    startTime: "2020-03-05T04:22:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-05T04:22:27Z"
    generateName: weave-net-
    labels:
      controller-revision-hash: 7f54576664
      name: weave-net
      pod-template-generation: "1"
    name: weave-net-dk9vb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: weave-net
      uid: ba6e6387-f66b-46f4-a0eb-38a7cd6c6e6d
    resourceVersion: "497677"
    selfLink: /api/v1/namespaces/kube-system/pods/weave-net-dk9vb
    uid: 44b43139-8f2c-430b-81b4-0d594cf03f1d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - work1
    containers:
    - command:
      - /home/weave/launch.sh
      env:
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: docker.io/weaveworks/weave-kube:2.6.0
      imagePullPolicy: IfNotPresent
      name: weave
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /status
          port: 6784
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /weavedb
        name: weavedb
      - mountPath: /host/opt
        name: cni-bin
      - mountPath: /host/home
        name: cni-bin2
      - mountPath: /host/etc
        name: cni-conf
      - mountPath: /host/var/lib/dbus
        name: dbus
      - mountPath: /lib/modules
        name: lib-modules
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: weave-net-token-vmzdx
        readOnly: true
    - env:
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: docker.io/weaveworks/weave-npc:2.6.0
      imagePullPolicy: IfNotPresent
      name: weave-npc
      resources:
        requests:
          cpu: 10m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: weave-net-token-vmzdx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: work1
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seLinuxOptions: {}
    serviceAccount: weave-net
    serviceAccountName: weave-net
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/weave
        type: ""
      name: weavedb
    - hostPath:
        path: /opt
        type: ""
      name: cni-bin
    - hostPath:
        path: /home
        type: ""
      name: cni-bin2
    - hostPath:
        path: /etc
        type: ""
      name: cni-conf
    - hostPath:
        path: /var/lib/dbus
        type: ""
      name: dbus
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: weave-net-token-vmzdx
      secret:
        defaultMode: 420
        secretName: weave-net-token-vmzdx
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-05T04:22:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T16:05:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T16:05:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-05T04:22:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://36d4b3d2e5e806eefe4449c18c9bf992d4fd81959123830230b592962d8d55d4
      image: weaveworks/weave-kube:2.6.0
      imageID: docker-pullable://weaveworks/weave-kube@sha256:e4a3a5b9bf605a7ff5ad5473c7493d7e30cbd1ed14c9c2630a4e409b4dbfab1c
      lastState:
        terminated:
          containerID: docker://6bdae3792771a0f7659ed59968f785c936c6539ebddf30edfe7bb07e93101c40
          exitCode: 1
          finishedAt: "2020-03-18T15:32:58Z"
          reason: Error
          startedAt: "2020-03-18T15:32:27Z"
      name: weave
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:33:11Z"
    - containerID: docker://cbac41b4948d47df2707fecd1ca8b43cceb44c5eafd0e6f679b32b39d14576c6
      image: weaveworks/weave-npc:2.6.0
      imageID: docker-pullable://weaveworks/weave-npc@sha256:985de9ff201677a85ce78703c515466fe45c9c73da6ee21821e89d902c21daf8
      lastState:
        terminated:
          containerID: docker://7db3cd487635be295b1c617568596d5f6cfe219a74c5689cf4759967a2415a27
          exitCode: 1
          finishedAt: "2020-03-19T16:05:18Z"
          reason: Error
          startedAt: "2020-03-18T15:32:27Z"
      name: weave-npc
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2020-03-19T16:05:19Z"
    hostIP: 10.0.2.4
    phase: Running
    podIP: 10.0.2.4
    podIPs:
    - ip: 10.0.2.4
    qosClass: Burstable
    startTime: "2020-03-05T04:22:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2020-03-19T16:05:18Z"
    generateName: dashboard-metrics-scraper-7b8b58dc8b-
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 7b8b58dc8b
    name: dashboard-metrics-scraper-7b8b58dc8b-8fwtr
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: dashboard-metrics-scraper-7b8b58dc8b
      uid: 32f9fb0b-a9c4-4caf-975e-7a025a4d2297
    resourceVersion: "497884"
    selfLink: /api/v1/namespaces/kubernetes-dashboard/pods/dashboard-metrics-scraper-7b8b58dc8b-8fwtr
    uid: ff23c937-d0b0-4dc5-90d8-9d0513b4792b
  spec:
    containers:
    - image: kubernetesui/metrics-scraper:v1.0.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8000
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: dashboard-metrics-scraper
      ports:
      - containerPort: 8000
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-6d4lk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    nodeSelector:
      beta.kubernetes.io/os: linux
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-6d4lk
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-6d4lk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T16:05:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T16:05:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T16:05:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T16:05:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ed20f4af88434556f0def86ecec819b265fc0f85176a0228d14ab00363a6f498
      image: kubernetesui/metrics-scraper:v1.0.3
      imageID: docker-pullable://kubernetesui/metrics-scraper@sha256:40f1d5785ea66609b1454b87ee92673671a11e64ba3bf1991644b45a818082ff
      lastState: {}
      name: dashboard-metrics-scraper
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-19T16:05:19Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.7
    podIPs:
    - ip: 10.32.0.7
    qosClass: BestEffort
    startTime: "2020-03-19T16:05:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-03-19T16:05:18Z"
    generateName: kubernetes-dashboard-5f5f847d57-
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 5f5f847d57
    name: kubernetes-dashboard-5f5f847d57-twclx
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kubernetes-dashboard-5f5f847d57
      uid: 6f36dbd9-2492-420a-b004-5610be1038d1
    resourceVersion: "497873"
    selfLink: /api/v1/namespaces/kubernetes-dashboard/pods/kubernetes-dashboard-5f5f847d57-twclx
    uid: fb9e87cb-1b44-4bd8-96e5-19539924ee56
  spec:
    containers:
    - args:
      - --auto-generate-certificates
      - --namespace=kubernetes-dashboard
      image: kubernetesui/dashboard:v2.0.0-rc6
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: kubernetes-dashboard
      ports:
      - containerPort: 8443
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: kubernetes-dashboard-certs
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-6d4lk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work2
    nodeSelector:
      beta.kubernetes.io/os: linux
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kubernetes-dashboard-certs
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-certs
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-6d4lk
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-6d4lk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T16:05:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T16:05:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T16:05:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-19T16:05:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://09ec5e3bdb3e79792cb2ac4392a6e9c9b76a2300edb2d7e1f9796ae6af9a0700
      image: kubernetesui/dashboard:v2.0.0-rc6
      imageID: docker-pullable://kubernetesui/dashboard@sha256:61f9c378c427a3f8a9643f83baa9f96db1ae1357c67a93b533ae7b36d71c69dc
      lastState: {}
      name: kubernetes-dashboard
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-03-19T16:05:22Z"
    hostIP: 10.0.2.5
    phase: Running
    podIP: 10.32.0.5
    podIPs:
    - ip: 10.32.0.5
    qosClass: BestEffort
    startTime: "2020-03-19T16:05:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"busybox1","namespace":"limitrange-demo"},"spec":{"containers":[{"args":["-c","while true; do echo hello from cnt01; sleep 10;done"],"command":["/bin/sh"],"image":"busybox","name":"busybox-cnt01","resources":{"limits":{"cpu":"500m","memory":"200Mi"},"requests":{"cpu":"100m","memory":"100Mi"}}},{"args":["-c","while true; do echo hello from cnt02; sleep 10;done"],"command":["/bin/sh"],"image":"busybox","name":"busybox-cnt02","resources":{"requests":{"cpu":"100m","memory":"100Mi"}}},{"args":["-c","while true; do echo hello from cnt03; sleep 10;done"],"command":["/bin/sh"],"image":"busybox","name":"busybox-cnt03","resources":{"limits":{"cpu":"500m","memory":"200Mi"}}},{"args":["-c","while true; do echo hello from cnt04; sleep 10;done"],"command":["/bin/sh"],"image":"busybox","name":"busybox-cnt04"}]}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu, memory limit for container
        busybox-cnt02; cpu, memory request for container busybox-cnt04; cpu, memory
        limit for container busybox-cnt04'
    creationTimestamp: "2020-03-17T16:35:07Z"
    name: busybox1
    namespace: limitrange-demo
    resourceVersion: "497674"
    selfLink: /api/v1/namespaces/limitrange-demo/pods/busybox1
    uid: 3face574-4e62-44db-8f90-a185238773f0
  spec:
    containers:
    - args:
      - -c
      - while true; do echo hello from cnt01; sleep 10;done
      command:
      - /bin/sh
      image: busybox
      imagePullPolicy: Always
      name: busybox-cnt01
      resources:
        limits:
          cpu: 500m
          memory: 200Mi
        requests:
          cpu: 100m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-4pgq2
        readOnly: true
    - args:
      - -c
      - while true; do echo hello from cnt02; sleep 10;done
      command:
      - /bin/sh
      image: busybox
      imagePullPolicy: Always
      name: busybox-cnt02
      resources:
        limits:
          cpu: 700m
          memory: 900Mi
        requests:
          cpu: 100m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-4pgq2
        readOnly: true
    - args:
      - -c
      - while true; do echo hello from cnt03; sleep 10;done
      command:
      - /bin/sh
      image: busybox
      imagePullPolicy: Always
      name: busybox-cnt03
      resources:
        limits:
          cpu: 500m
          memory: 200Mi
        requests:
          cpu: 500m
          memory: 200Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-4pgq2
        readOnly: true
    - args:
      - -c
      - while true; do echo hello from cnt04; sleep 10;done
      command:
      - /bin/sh
      image: busybox
      imagePullPolicy: Always
      name: busybox-cnt04
      resources:
        limits:
          cpu: 700m
          memory: 900Mi
        requests:
          cpu: 110m
          memory: 111Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-4pgq2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: work1
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-4pgq2
      secret:
        defaultMode: 420
        secretName: default-token-4pgq2
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-03-17T16:35:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:33:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-03-18T15:33:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-03-17T16:35:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e7cabff30365d75994e092295b02a4328b1285a2e19584f04f9625322d050f90
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:b26cd013274a657b86e706210ddd5cc1f82f50155791199d29b9e86e935ce135
      lastState:
        terminated:
          containerID: docker://36db9db619151acecacfde414aab3732717c42b7c532cbe0370c9386d9f97bb6
          exitCode: 255
          finishedAt: "2020-03-18T15:32:12Z"
          reason: Error
          startedAt: "2020-03-17T16:35:12Z"
      name: busybox-cnt01
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:33:30Z"
    - containerID: docker://2282ce761ef7518016782502202f970eab23e07edaf4778e7a70d60c4d05245a
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:b26cd013274a657b86e706210ddd5cc1f82f50155791199d29b9e86e935ce135
      lastState:
        terminated:
          containerID: docker://5d81bd4a093101d14b9c8a17edf0363677cf5e46e9a8b259c3d5c44d1e1cd040
          exitCode: 255
          finishedAt: "2020-03-18T15:32:12Z"
          reason: Error
          startedAt: "2020-03-17T16:35:15Z"
      name: busybox-cnt02
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:33:33Z"
    - containerID: docker://1bc2b7dc0d31fce986c1bcd6468eeaecff2e36c72d11d259e808567e1cbf6013
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:b26cd013274a657b86e706210ddd5cc1f82f50155791199d29b9e86e935ce135
      lastState:
        terminated:
          containerID: docker://47e6c4a2cfa8bf32dd9dddc0c4a06e66cb3177d4939b2d9da0e30bba2751b382
          exitCode: 255
          finishedAt: "2020-03-18T15:32:12Z"
          reason: Error
          startedAt: "2020-03-17T16:35:19Z"
      name: busybox-cnt03
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:33:37Z"
    - containerID: docker://c642f924608d7e09fe43a3e54e715f29587dfeadfc06bdae856c2fb5ff8f2cfb
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:b26cd013274a657b86e706210ddd5cc1f82f50155791199d29b9e86e935ce135
      lastState:
        terminated:
          containerID: docker://5535c64e0dbb321b8114ca75b83bbf9593d61348c9ec6c13331d5472b806e934
          exitCode: 255
          finishedAt: "2020-03-18T15:32:12Z"
          reason: Error
          startedAt: "2020-03-17T16:35:22Z"
      name: busybox-cnt04
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2020-03-18T15:33:41Z"
    hostIP: 10.0.2.4
    phase: Running
    podIP: 10.40.0.2
    podIPs:
    - ip: 10.40.0.2
    qosClass: Burstable
    startTime: "2020-03-17T16:35:07Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2020-03-21T18:37:51Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "499295"
    selfLink: /api/v1/namespaces/default/services/kubernetes
    uid: 3e0755ed-2391-493d-aa25-06bdcccebfc7
  spec:
    clusterIP: 10.96.0.1
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2020-03-03T08:33:42Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: KubeDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "199"
    selfLink: /api/v1/namespaces/kube-system/services/kube-dns
    uid: 702d6e6c-b510-448a-aa3e-4b8d5ada0dca
  spec:
    clusterIP: 10.96.0.10
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2020-03-19T15:24:19Z"
    labels:
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "453803"
    selfLink: /api/v1/namespaces/kube-system/services/metrics-server
    uid: f09bcf1c-f73f-452d-b40b-525194d71c1b
  spec:
    clusterIP: 10.96.118.36
    ports:
    - port: 443
      protocol: TCP
      targetPort: main-port
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":8000,"targetPort":8000}],"selector":{"k8s-app":"dashboard-metrics-scraper"}}}
    creationTimestamp: "2020-03-19T16:05:18Z"
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "457196"
    selfLink: /api/v1/namespaces/kubernetes-dashboard/services/dashboard-metrics-scraper
    uid: 54ea1c74-07a3-41f3-a356-a0b884b371b7
  spec:
    clusterIP: 10.101.106.87
    ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      k8s-app: dashboard-metrics-scraper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":443,"targetPort":8443}],"selector":{"k8s-app":"kubernetes-dashboard"}}}
    creationTimestamp: "2020-03-19T16:05:18Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "457482"
    selfLink: /api/v1/namespaces/kubernetes-dashboard/services/kubernetes-dashboard
    uid: 6f65fece-0259-41fe-a9ff-988dfaa537f4
  spec:
    clusterIP: 10.105.183.42
    externalTrafficPolicy: Cluster
    ports:
    - nodePort: 31845
      port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      k8s-app: kubernetes-dashboard
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2020-03-03T08:33:42Z"
    generation: 1
    labels:
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "497866"
    selfLink: /apis/apps/v1/namespaces/kube-system/daemonsets/kube-proxy
    uid: da25070e-3595-4246-a165-399d398cb853
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /usr/local/bin/kube-proxy
          - --config=/var/lib/kube-proxy/config.conf
          - --hostname-override=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: k8s.gcr.io/kube-proxy:v1.17.3
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kube-proxy
            name: kube-proxy
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kube-proxy
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      cloud.weave.works/launcher-info: |-
        {
          "original-request": {
            "url": "/k8s/v1.16/net.yaml?k8s-version=Q2xpZW50IFZlcnNpb246IHZlcnNpb24uSW5mb3tNYWpvcjoiMSIsIE1pbm9yOiIxNyIsIEdpdFZlcnNpb246InYxLjE3LjMiLCBHaXRDb21taXQ6IjA2YWQ5NjBiZmQwM2IzOWM4MzEwYWFmOTJkMWU3YzEyY2U2MTgyMTMiLCBHaXRUcmVlU3RhdGU6ImNsZWFuIiwgQnVpbGREYXRlOiIyMDIwLTAyLTExVDE4OjE0OjIyWiIsIEdvVmVyc2lvbjoiZ28xLjEzLjYiLCBDb21waWxlcjoiZ2MiLCBQbGF0Zm9ybToibGludXgvYW1kNjQifQpTZXJ2ZXIgVmVyc2lvbjogdmVyc2lvbi5JbmZve01ham9yOiIxIiwgTWlub3I6IjE3IiwgR2l0VmVyc2lvbjoidjEuMTcuMyIsIEdpdENvbW1pdDoiMDZhZDk2MGJmZDAzYjM5YzgzMTBhYWY5MmQxZTdjMTJjZTYxODIxMyIsIEdpdFRyZWVTdGF0ZToiY2xlYW4iLCBCdWlsZERhdGU6IjIwMjAtMDItMTFUMTg6MDc6MTNaIiwgR29WZXJzaW9uOiJnbzEuMTMuNiIsIENvbXBpbGVyOiJnYyIsIFBsYXRmb3JtOiJsaW51eC9hbWQ2NCJ9Cg==",
            "date": "Thu Mar 05 2020 04:22:28 GMT+0000 (UTC)"
          },
          "email-address": "support@weave.works"
        }
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{"cloud.weave.works/launcher-info":"{\n  \"original-request\": {\n    \"url\": \"/k8s/v1.16/net.yaml?k8s-version=Q2xpZW50IFZlcnNpb246IHZlcnNpb24uSW5mb3tNYWpvcjoiMSIsIE1pbm9yOiIxNyIsIEdpdFZlcnNpb246InYxLjE3LjMiLCBHaXRDb21taXQ6IjA2YWQ5NjBiZmQwM2IzOWM4MzEwYWFmOTJkMWU3YzEyY2U2MTgyMTMiLCBHaXRUcmVlU3RhdGU6ImNsZWFuIiwgQnVpbGREYXRlOiIyMDIwLTAyLTExVDE4OjE0OjIyWiIsIEdvVmVyc2lvbjoiZ28xLjEzLjYiLCBDb21waWxlcjoiZ2MiLCBQbGF0Zm9ybToibGludXgvYW1kNjQifQpTZXJ2ZXIgVmVyc2lvbjogdmVyc2lvbi5JbmZve01ham9yOiIxIiwgTWlub3I6IjE3IiwgR2l0VmVyc2lvbjoidjEuMTcuMyIsIEdpdENvbW1pdDoiMDZhZDk2MGJmZDAzYjM5YzgzMTBhYWY5MmQxZTdjMTJjZTYxODIxMyIsIEdpdFRyZWVTdGF0ZToiY2xlYW4iLCBCdWlsZERhdGU6IjIwMjAtMDItMTFUMTg6MDc6MTNaIiwgR29WZXJzaW9uOiJnbzEuMTMuNiIsIENvbXBpbGVyOiJnYyIsIFBsYXRmb3JtOiJsaW51eC9hbWQ2NCJ9Cg==\",\n    \"date\": \"Thu Mar 05 2020 04:22:28 GMT+0000 (UTC)\"\n  },\n  \"email-address\": \"support@weave.works\"\n}"},"labels":{"name":"weave-net"},"name":"weave-net","namespace":"kube-system"},"spec":{"minReadySeconds":5,"selector":{"matchLabels":{"name":"weave-net"}},"template":{"metadata":{"labels":{"name":"weave-net"}},"spec":{"containers":[{"command":["/home/weave/launch.sh"],"env":[{"name":"HOSTNAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"docker.io/weaveworks/weave-kube:2.6.0","name":"weave","readinessProbe":{"httpGet":{"host":"127.0.0.1","path":"/status","port":6784}},"resources":{"requests":{"cpu":"10m"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/weavedb","name":"weavedb"},{"mountPath":"/host/opt","name":"cni-bin"},{"mountPath":"/host/home","name":"cni-bin2"},{"mountPath":"/host/etc","name":"cni-conf"},{"mountPath":"/host/var/lib/dbus","name":"dbus"},{"mountPath":"/lib/modules","name":"lib-modules"},{"mountPath":"/run/xtables.lock","name":"xtables-lock"}]},{"env":[{"name":"HOSTNAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"docker.io/weaveworks/weave-npc:2.6.0","name":"weave-npc","resources":{"requests":{"cpu":"10m"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/run/xtables.lock","name":"xtables-lock"}]}],"hostNetwork":true,"hostPID":true,"restartPolicy":"Always","securityContext":{"seLinuxOptions":{}},"serviceAccountName":"weave-net","tolerations":[{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/lib/weave"},"name":"weavedb"},{"hostPath":{"path":"/opt"},"name":"cni-bin"},{"hostPath":{"path":"/home"},"name":"cni-bin2"},{"hostPath":{"path":"/etc"},"name":"cni-conf"},{"hostPath":{"path":"/var/lib/dbus"},"name":"dbus"},{"hostPath":{"path":"/lib/modules"},"name":"lib-modules"},{"hostPath":{"path":"/run/xtables.lock","type":"FileOrCreate"},"name":"xtables-lock"}]}},"updateStrategy":{"type":"RollingUpdate"}}}
    creationTimestamp: "2020-03-05T04:22:27Z"
    generation: 1
    labels:
      name: weave-net
    name: weave-net
    namespace: kube-system
    resourceVersion: "507460"
    selfLink: /apis/apps/v1/namespaces/kube-system/daemonsets/weave-net
    uid: ba6e6387-f66b-46f4-a0eb-38a7cd6c6e6d
  spec:
    minReadySeconds: 5
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: weave-net
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: weave-net
      spec:
        containers:
        - command:
          - /home/weave/launch.sh
          env:
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: docker.io/weaveworks/weave-kube:2.6.0
          imagePullPolicy: IfNotPresent
          name: weave
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /status
              port: 6784
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 10m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /weavedb
            name: weavedb
          - mountPath: /host/opt
            name: cni-bin
          - mountPath: /host/home
            name: cni-bin2
          - mountPath: /host/etc
            name: cni-conf
          - mountPath: /host/var/lib/dbus
            name: dbus
          - mountPath: /lib/modules
            name: lib-modules
          - mountPath: /run/xtables.lock
            name: xtables-lock
        - env:
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: docker.io/weaveworks/weave-npc:2.6.0
          imagePullPolicy: IfNotPresent
          name: weave-npc
          resources:
            requests:
              cpu: 10m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/xtables.lock
            name: xtables-lock
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seLinuxOptions: {}
        serviceAccount: weave-net
        serviceAccountName: weave-net
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/weave
            type: ""
          name: weavedb
        - hostPath:
            path: /opt
            type: ""
          name: cni-bin
        - hostPath:
            path: /home
            type: ""
          name: cni-bin2
        - hostPath:
            path: /etc
            type: ""
          name: cni-conf
        - hostPath:
            path: /var/lib/dbus
            type: ""
          name: dbus
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-03-21T18:55:43Z"
    generation: 3
    labels:
      run: http-go
    name: http-go
    namespace: default
    resourceVersion: "503060"
    selfLink: /apis/apps/v1/namespaces/default/deployments/http-go
    uid: 69443e7f-dceb-4216-af49-0f87f87bb88d
  spec:
    progressDeadlineSeconds: 600
    replicas: 30
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        run: http-go
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          run: http-go
      spec:
        containers:
        - image: gasbugs/http-go
          imagePullPolicy: Always
          name: http-go
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 30
    conditions:
    - lastTransitionTime: "2020-03-21T18:55:43Z"
      lastUpdateTime: "2020-03-21T18:55:47Z"
      message: ReplicaSet "http-go-69b884b5b5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-03-21T19:00:20Z"
      lastUpdateTime: "2020-03-21T19:00:20Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 3
    readyReplicas: 30
    replicas: 30
    updatedReplicas: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-03-03T08:33:42Z"
    generation: 1
    labels:
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "506988"
    selfLink: /apis/apps/v1/namespaces/kube-system/deployments/coredns
    uid: 9f433d6c-8154-4272-92a2-f039c8643f02
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: k8s.gcr.io/coredns:1.6.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2020-03-05T04:18:13Z"
      lastUpdateTime: "2020-03-05T04:22:46Z"
      message: ReplicaSet "coredns-6955765f44" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-03-18T15:33:04Z"
      lastUpdateTime: "2020-03-18T15:33:04Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2020-03-19T15:24:19Z"
    generation: 2
    labels:
      k8s-app: metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "497883"
    selfLink: /apis/apps/v1/namespaces/kube-system/deployments/metrics-server
    uid: 1e674aea-ce68-4f69-9f71-8a6a2ca6f44f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
        name: metrics-server
      spec:
        containers:
        - args:
          - --cert-dir=/tmp
          - --secure-port=4443
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
          image: k8s.gcr.io/metrics-server-amd64:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          ports:
          - containerPort: 4443
            name: main-port
            protocol: TCP
          resources: {}
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/arch: amd64
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-03-19T15:24:19Z"
      lastUpdateTime: "2020-03-19T15:27:10Z"
      message: ReplicaSet "metrics-server-6ffdb54684" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-03-21T18:28:20Z"
      lastUpdateTime: "2020-03-21T18:28:20Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"dashboard-metrics-scraper"}},"template":{"metadata":{"annotations":{"seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"k8s-app":"dashboard-metrics-scraper"}},"spec":{"containers":[{"image":"kubernetesui/metrics-scraper:v1.0.3","livenessProbe":{"httpGet":{"path":"/","port":8000,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"dashboard-metrics-scraper","ports":[{"containerPort":8000,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"beta.kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2020-03-19T16:05:18Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "497887"
    selfLink: /apis/apps/v1/namespaces/kubernetes-dashboard/deployments/dashboard-metrics-scraper
    uid: 08d2e0cc-cedf-404f-a01f-c916a7d7d9e6
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-03-19T16:05:18Z"
      lastUpdateTime: "2020-03-19T16:05:20Z"
      message: ReplicaSet "dashboard-metrics-scraper-7b8b58dc8b" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-03-21T18:28:20Z"
      lastUpdateTime: "2020-03-21T18:28:20Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"kubernetes-dashboard"}},"template":{"metadata":{"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"containers":[{"args":["--auto-generate-certificates","--namespace=kubernetes-dashboard"],"image":"kubernetesui/dashboard:v2.0.0-rc6","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"kubernetes-dashboard","ports":[{"containerPort":8443,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/certs","name":"kubernetes-dashboard-certs"},{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"beta.kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"name":"kubernetes-dashboard-certs","secret":{"secretName":"kubernetes-dashboard-certs"}},{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2020-03-19T16:05:18Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "497878"
    selfLink: /apis/apps/v1/namespaces/kubernetes-dashboard/deployments/kubernetes-dashboard
    uid: e2c35f51-2d19-4a10-8935-14cddb38cb42
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.0.0-rc6
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-03-19T16:05:18Z"
      lastUpdateTime: "2020-03-19T16:05:23Z"
      message: ReplicaSet "kubernetes-dashboard-5f5f847d57" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-03-21T18:28:19Z"
      lastUpdateTime: "2020-03-21T18:28:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-03-17T16:41:08Z"
    generation: 1
    labels:
      run: nginx
    name: nginx
    namespace: limitrange-demo
    resourceVersion: "406335"
    selfLink: /apis/apps/v1/namespaces/limitrange-demo/deployments/nginx
    uid: 93b774ce-deef-40fa-aa59-d2f683efe8bc
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        run: nginx
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          run: nginx
      spec:
        containers:
        - image: nginx
          imagePullPolicy: Always
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2020-03-17T16:41:08Z"
      lastUpdateTime: "2020-03-17T16:41:08Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2020-03-17T16:41:08Z"
      lastUpdateTime: "2020-03-17T16:41:08Z"
      message: 'pods "nginx-867df6c8b9-5jpq9" is forbidden: maximum cpu usage per
        Container is 800m, but limit is 1'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    - lastTransitionTime: "2020-03-17T16:51:09Z"
      lastUpdateTime: "2020-03-17T16:51:09Z"
      message: ReplicaSet "nginx-867df6c8b9" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 1
    unavailableReplicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "30"
      deployment.kubernetes.io/max-replicas: "38"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-03-21T18:55:43Z"
    generation: 3
    labels:
      pod-template-hash: 69b884b5b5
      run: http-go
    name: http-go-69b884b5b5
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: http-go
      uid: 69443e7f-dceb-4216-af49-0f87f87bb88d
    resourceVersion: "503059"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/http-go-69b884b5b5
    uid: 171b1e5d-31f3-4447-bc8f-55b503db60ed
  spec:
    replicas: 30
    selector:
      matchLabels:
        pod-template-hash: 69b884b5b5
        run: http-go
    template:
      metadata:
        creationTimestamp: null
        labels:
          pod-template-hash: 69b884b5b5
          run: http-go
      spec:
        containers:
        - image: gasbugs/http-go
          imagePullPolicy: Always
          name: http-go
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 30
    fullyLabeledReplicas: 30
    observedGeneration: 3
    readyReplicas: 30
    replicas: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-03-03T08:33:48Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 6955765f44
    name: coredns-6955765f44
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 9f433d6c-8154-4272-92a2-f039c8643f02
    resourceVersion: "506987"
    selfLink: /apis/apps/v1/namespaces/kube-system/replicasets/coredns-6955765f44
    uid: c71139e1-0823-4a22-8a28-5efc098e7940
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 6955765f44
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 6955765f44
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: k8s.gcr.io/coredns:1.6.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-03-19T15:24:19Z"
    generation: 2
    labels:
      k8s-app: metrics-server
      pod-template-hash: 58c885686f
    name: metrics-server-58c885686f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 1e674aea-ce68-4f69-9f71-8a6a2ca6f44f
    resourceVersion: "454270"
    selfLink: /apis/apps/v1/namespaces/kube-system/replicasets/metrics-server-58c885686f
    uid: 747e61b1-d377-4e93-82bf-51845e3ed161
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 58c885686f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 58c885686f
        name: metrics-server
      spec:
        containers:
        - args:
          - --cert-dir=/tmp
          - --secure-port=4443
          image: k8s.gcr.io/metrics-server-amd64:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          ports:
          - containerPort: 4443
            name: main-port
            protocol: TCP
          resources: {}
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/arch: amd64
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2020-03-19T15:27:07Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 6ffdb54684
    name: metrics-server-6ffdb54684
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 1e674aea-ce68-4f69-9f71-8a6a2ca6f44f
    resourceVersion: "497882"
    selfLink: /apis/apps/v1/namespaces/kube-system/replicasets/metrics-server-6ffdb54684
    uid: 787f9db0-90d0-4820-a3be-edd6e35e72a5
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 6ffdb54684
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 6ffdb54684
        name: metrics-server
      spec:
        containers:
        - args:
          - --cert-dir=/tmp
          - --secure-port=4443
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
          image: k8s.gcr.io/metrics-server-amd64:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          ports:
          - containerPort: 4443
            name: main-port
            protocol: TCP
          resources: {}
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/arch: amd64
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-03-19T16:05:18Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 7b8b58dc8b
    name: dashboard-metrics-scraper-7b8b58dc8b
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: dashboard-metrics-scraper
      uid: 08d2e0cc-cedf-404f-a01f-c916a7d7d9e6
    resourceVersion: "497886"
    selfLink: /apis/apps/v1/namespaces/kubernetes-dashboard/replicasets/dashboard-metrics-scraper-7b8b58dc8b
    uid: 32f9fb0b-a9c4-4caf-975e-7a025a4d2297
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
        pod-template-hash: 7b8b58dc8b
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
          pod-template-hash: 7b8b58dc8b
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-03-19T16:05:18Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 5f5f847d57
    name: kubernetes-dashboard-5f5f847d57
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard
      uid: e2c35f51-2d19-4a10-8935-14cddb38cb42
    resourceVersion: "497876"
    selfLink: /apis/apps/v1/namespaces/kubernetes-dashboard/replicasets/kubernetes-dashboard-5f5f847d57
    uid: 6f36dbd9-2492-420a-b004-5610be1038d1
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
        pod-template-hash: 5f5f847d57
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
          pod-template-hash: 5f5f847d57
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.0.0-rc6
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-03-17T16:41:08Z"
    generation: 1
    labels:
      pod-template-hash: 867df6c8b9
      run: nginx
    name: nginx-867df6c8b9
    namespace: limitrange-demo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: nginx
      uid: 93b774ce-deef-40fa-aa59-d2f683efe8bc
    resourceVersion: "404871"
    selfLink: /apis/apps/v1/namespaces/limitrange-demo/replicasets/nginx-867df6c8b9
    uid: b47583b4-9836-41fa-a8c3-84bb6b4cb42b
  spec:
    replicas: 3
    selector:
      matchLabels:
        pod-template-hash: 867df6c8b9
        run: nginx
    template:
      metadata:
        creationTimestamp: null
        labels:
          pod-template-hash: 867df6c8b9
          run: nginx
      spec:
        containers:
        - image: nginx
          imagePullPolicy: Always
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2020-03-17T16:41:08Z"
      message: 'pods "nginx-867df6c8b9-5jpq9" is forbidden: maximum cpu usage per
        Container is 800m, but limit is 1'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    observedGeneration: 1
    replicas: 0
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
